const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports = {
  config: {
    name: "owner",
    aliases: ["info", "anja"],
    author: "Aesther",
    version: "2.0",
    cooldowns: 5,
    role: 0,
    shortDescription: {
      en: "Display owner information"
    },
    longDescription: {
      en: "Get information about the bot's owner"
    },
    category: "owner",
    guide: {
      en: "{p}owner"
    }
  },

  onStart: async function ({ api, event }) {
    try {
      const loadingMessage = "üí¨ ùôíùòºùôÑùôè ùòΩùôäùôéùôé ...";
      await api.sendMessage(loadingMessage, event.threadID);

      const ownerInfo = {
        name: 'ùòºùôâùôÖùòº/ùôºùöíùöùùöäùöñùöä/ùöÉùöëùöéùöä',
        gender: 'ùòéùò™ùò≥ùò≠',
        hobby: 'ùò±ùò¶ùò≥ùòßùò¶ùò§ùòµùò™ùò∞ùòØùòØùò™ùò¥ùòµùò¶/ùòµùò¶ùò¢ùò§ùò©ùò¶ùò≥/ùòôùò∞ùò≠ùò¶ùò±ùò¢ùò∫ùò¶ùò≥/ùòøùôäùôàùôÑùôâùòºùôèùôÑùôäùôâüòå',
        relationship: 'ùôàùòºùôçùôçùôÑùôÄùòø',
        facebookLink: 'www.facebook.com/mitama.sama\nwww.facebook.com/Goddess-anais-Aesther',
        bio: 'ùôÑ ùòÆ ùòµùò©ùò¶ ùòΩùôÄùôéùôèü§£üå∑'
      };

      const videoUrls = [
        "https://i.imgur.com/DDO686J.mp4",
        "https://i.imgur.com/WWGiRvB.mp4",
        "https://i.imgur.com/20QmmsT.mp4",
        "https://i.imgur.com/nN28Eea.mp4",
        "https://i.imgur.com/fknQ3Ut.mp4",
        "https://i.imgur.com/yXZJ4A9.mp4",
        "https://i.imgur.com/aWIyVpN.mp4",
        "https://i.imgur.com/aFIwl8X.mp4",
        "https://i.imgur.com/SJ60dUB.mp4",
        "https://i.imgur.com/ySu69zS.mp4"
        // R√©duis la liste pour all√©ger, tu peux remettre tous si besoin
      ];

      // Choisir une vid√©o al√©atoire
      const selectedUrl = videoUrls[Math.floor(Math.random() * videoUrls.length)];

      // Cr√©er le dossier tmp s‚Äôil n'existe pas
      const tmpFolderPath = path.join(__dirname, 'tmp');
      if (!fs.existsSync(tmpFolderPath)) {
        fs.mkdirSync(tmpFolderPath);
      }

      const videoResponse = await axios.get(selectedUrl, { responseType: 'arraybuffer' });
      const videoPath = path.join(tmpFolderPath, `owner_video_${Date.now()}.mp4`);
      fs.writeFileSync(videoPath, videoResponse.data);

      const response = `
ùó¢ùó™ùó°ùóòùó• ùóúùó°ùóôùó¢ùó•ùó†ùóîùóßùóúùó¢ùó°:
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
(‚óç‚Ä¢·¥ó‚Ä¢‚óç) ùó°ùóîùó†ùóò : ${ownerInfo.name}
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
‚ôÄÔ∏è ùóöùóòùó°ùóóùóòùó•: ${ownerInfo.gender}
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
üèì ùóõùó¢ùóïùóïùó¨: ${ownerInfo.hobby}
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
üíû ùó•ùóòùóüùóîùóßùóúùó¢ùó°ùó¶ùóõùóúùó£: ${ownerInfo.relationship}
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
üîó ùóôùóîùóñùóòùóïùó¢ùó¢ùóû: ${ownerInfo.facebookLink}
‚ä∞üåü‚ä±‚îà‚îÄ‚îÄ‚îÄ‚îÄ‚ïå‚ùä
‚óà ùó¶ùóßùóîùóßùó®ùó¶: ${ownerInfo.bio} üá≤üá¨
      `;

      await api.sendMessage({
        body: response,
        attachment: fs.createReadStream(videoPath)
      }, event.threadID, () => {
        // Supprimer la vid√©o apr√®s envoi
        fs.unlinkSync(videoPath);
      });

    } catch (error) {
      console.error('Error in owner command:', error);
      api.sendMessage('‚ùå Une erreur est survenue pendant l\'ex√©cution de la commande.', event.threadID);
    }
  },


  onChat: async function({ api, event }) {
    try {
      const lowerCaseBody = (event.body || "").toLowerCase();
      if (lowerCaseBody === "owner" || lowerCaseBody.includes("anja") || lowerCaseBody.includes("info")) {
        await this.onStart({ api, event });
      }
    } catch (error) {
      console.error('Error in onChat function:', error);
    }
  }
};
